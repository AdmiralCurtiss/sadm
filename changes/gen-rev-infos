#! /bin/bash

source $(dirname $0)/config.vars

# Update the repository
( cd $REPO && git pull >/dev/null 2>&1; )

# Check the last 100 revisions and get all the ones we haven't handled yet in the past
LAST_REV=$(cd $REPO && git log --format=format:'%H' --all -n 100)
REV_TO_HANDLE=
for r in $LAST_REV; do
    if ! fgrep -q $r $BASE/already-parsed 2>/dev/null; then
        REV_TO_HANDLE="$r $REV_TO_HANDLE"
        echo $r >> $BASE/already-parsed
    fi
done

# For each revision we haven't handled, put all the informations in rev-infos-new
touch $BASE/rev-infos-new
for r in $REV_TO_HANDLE; do
    log=$(cd $REPO && git log --format=format:"<td><a href=\"$URL$r\"><tt>%H</tt></a></td><td>%an</td><td>%s</td>" -1 $r)
    svn=$(cd $REPO && git log --format=full -1 $r | grep git-svn-id | cut -d @ -f 2 | cut -d ' ' -f 1 | head -1)
    branch=$(cd $REPO && $BASE/git-what-branch --allbranches $r | cut -d / -f 3- | cut -d '(' -f 1 | xargs echo)
    if [ ! -z "$svn" ]; then
        svn=r$svn
    fi
    v=$(cd $REPO && git describe --always --long $r | cut -d - -f -2)
    echo "<tr><td>$v</td><td>$svn</td>$log</tr>" >> $BASE/rev-infos-new
    if ! echo "$branch" | fgrep -q " " 2>/dev/null; then
        buildbot sendchange -m $BUILDBOT_ADDR -a $BUILDBOT_CREDS -W "$(cd $REPO && git log --format=format:"%an" -1 $r)" -s git -r $r -p branchname:$branch -p shortrev:$v -l "$URL$r" -c "$(cd $REPO && git log --format=format:"%s" -1 $r)" >/dev/null 2>&1
    fi
done

# Append the new infos to the rev infos file, in the right order
touch $BASE/rev-infos
tac $BASE/rev-infos-new > $BASE/rev-infos-new-tac
cat $BASE/rev-infos-new-tac $BASE/rev-infos > $BASE/rev-infos-new
mv $BASE/rev-infos-new $BASE/rev-infos
rm $BASE/rev-infos-new-tac
